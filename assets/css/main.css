/**
 * Media queries.
 */
/**
 * HTML styling/reset
 */
/**
 * Adjust box sizing on site.
 */
*,
*::before,
*::after {
  box-sizing: border-box; }

/**
 * Adjust font size for easier px to rem conversion.
 */
html {
  font-size: 62.5%; }

/**
 * Remove annoying empty space below inline-block elements.
 */
img,
[style*='inline-block' i],
svg,
canvas,
picture {
  vertical-align: middle; }

img,
svg {
  height: auto;
  max-width: 100%; }

ul,
ol {
  margin: 0;
  padding: 0;
  list-style-type: none; }

li,
blockquote,
figure {
  margin: 0;
  padding: 0; }

button {
  padding: 0;
  color: inherit;
  background-color: transparent;
  appearance: none;
  border: none;
  cursor: pointer; }

/**
 * Side wide custom properties.
 */
:root {
  --base-width-max-width: 120rem;
  --base-width-side-margin: 2rem; }

body {
  font: normal 400 1.8rem/1.6 'Josefin Sans', sans-serif; }

/**
 * Sticky footer.
 */
body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: var(--color-body-bg);
  color: var(--color); }

body > header,
body > footer {
  flex: 0 0 auto; }

body > main {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1 1 auto; }

/**
 * Add base width to handle horizontal alignment.
 */
.base-width {
  width: calc(100% - (2 * var(--base-width-side-margin)));
  max-width: var(--base-width-max-width);
  margin-right: auto;
  margin-left: auto; }

/**
 * exalator
 */
body {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center; }

.rail {
  position: relative;
  width: 30px;
  height: 400px;
  transform: skewX(-40deg);
  border-radius: 4px 8px 4px 8px;
  background-clip: content-box;
  padding-top: 15px;
  padding-bottom: 15px;
  background-color: lightgray; }
  .rail::before, .rail::after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 0;
    margin-top: 15px;
    margin-bottom: 15px;
    width: 4px;
    background-color: red;
    background-image: linear-gradient(black 0px, black 2px, lightgrey 2px, lightgrey 6px, black 8px);
    background-size: 100% 8px;
    animation: moveBand 5s infinite reverse linear;
    transform: skewY(25deg); }
  .rail::after {
    right: 0;
    animation-direction: normal; }

.step {
  position: absolute;
  top: 100%;
  right: 100%;
  width: 40px;
  height: 10px;
  background-color: darkgray;
  background-image: linear-gradient(90deg, transparent 0px, transparent 2px, black 4px, black 6px, transparent 8px);
  animation: up 4s infinite linear;
  transform-origin: 100% 100%;
  background-size: 8px 100%; }
  .step:nth-child(1) {
    animation-delay: -0.33333s; }
  .step:nth-child(2) {
    animation-delay: -0.66667s; }
  .step:nth-child(3) {
    animation-delay: -1s; }
  .step:nth-child(4) {
    animation-delay: -1.33333s; }
  .step:nth-child(5) {
    animation-delay: -1.66667s; }
  .step:nth-child(6) {
    animation-delay: -2s; }
  .step:nth-child(7) {
    animation-delay: -2.33333s; }
  .step:nth-child(8) {
    animation-delay: -2.66667s; }
  .step:nth-child(9) {
    animation-delay: -3s; }
  .step:nth-child(10) {
    animation-delay: -3.33333s; }
  .step:nth-child(11) {
    animation-delay: -3.66667s; }
  .step:nth-child(12) {
    animation-delay: -4s; }

.cog {
  position: relative;
  z-index: 10;
  overflow: hidden;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background-color: grey;
  transform: skewX(40deg); }
  .cog::after, .cog::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 40%;
    height: 40%;
    margin: auto;
    border-radius: 50%;
    border-style: dotted;
    border-width: 3px;
    border-color: white;
    background-color: black;
    animation: turn linear infinite backwards 1s; }
  .cog-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0; }

@keyframes up {
  0% {
    top: 100%;
    opacity: 0;
    transform: translate(-200%, -100%) skewX(40deg); }
  10% {
    top: 100%;
    opacity: 1;
    transform: translate(0, -100%) skewX(40deg); }
  90% {
    top: 0;
    opacity: 1;
    transform: translate(0, -100%) skewX(40deg); }
  100% {
    top: 0;
    opacity: 0;
    transform: translate(200%, -100%) skewX(40deg); } }

@keyframes turn {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(360deg); } }

@keyframes moveBand {
  0% {
    background-position: 0% 0%; }
  100% {
    background-position: 0% 100%; } }
